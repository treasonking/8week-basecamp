input { beats { port => 5044 codec => plain } }
filter {
  if [log][file][path] =~ "auth\.log" and "sshd" in [message] {
    grok { match => { "message" => [
      "%{SYSLOGTIMESTAMP:ts} %{HOSTNAME} sshd\[%{NUMBER}\]: Failed password for(?: invalid user)? %{DATA:user} from %{IP:source.ip} port %{NUMBER} ssh2",
      "%{SYSLOGTIMESTAMP:ts} %{HOSTNAME} sshd\[%{NUMBER}\]: Accepted %{DATA:auth.method} for %{DATA:user} from %{IP:source.ip} port %{NUMBER} ssh2"
    ] } tag_on_failure => ["grok_ssh_fail"] }
    mutate { add_field => { "event.category" => "authentication" } }
    if "Failed password" in [message] { mutate { add_field => { "event.outcome" => "failure" } } }
    else if "Accepted" in [message]  { mutate { add_field => { "event.outcome" => "success" } } }
    date { match => [ "ts", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ] target => "@timestamp" }
  }
}
output {
  opensearch { hosts => ["http://opensearch:9200"] index => "logs-%{+YYYY.MM.dd}" }
  stdout { codec => rubydebug }
}
